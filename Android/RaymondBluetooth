package com.projetinfo.android.watchint;

import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.bluetooth.BluetoothAdapter;
import android.content.Intent;
import android.widget.Button;
import android.bluetooth.BluetoothDevice;
import java.util.Set;
import android.widget.TextView;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.IntentFilter;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.ListView;
import android.widget.ArrayAdapter;
import android.widget.Toast;


public class MainActivity extends AppCompatActivity implements OnClickListener {
    //
    private static final int REQUEST_ENABLE_BLUETOOTH = 1;
    private Button turnOnOffBlue;
    private Button visibleBtn;
    private Button listBtn;
    private Button searchBtn;
    private TextView text;
    private ListView myListView;
    private BluetoothAdapter myBluetoothAdapter;
    private Set<BluetoothDevice> pairedDevices;
    private ArrayAdapter<String> BTArrayAdapter;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);


        // CHECK FOR PRESENCE OF BLUETOOTH ON THE DEVICE

        // The static method getDefaultAdapter() enables us to get the BluetoothAdapter that represents the device
        //If it returns null, that means that the device does not support Bluetooth

        BluetoothAdapter myBluetoothAdapter = BluetoothAdapter.getDefaultAdapter();
        if (myBluetoothAdapter == null) {
            turnOnOffBlue.setEnabled(false);
            listBtn.setEnabled(false);
            searchBtn.setEnabled(false);
            text.setText("Status: not supported");
            Toast.makeText(getApplicationContext(),
                    "Your device does not support Bluetooth", Toast.LENGTH_LONG)
                    .show();
        } else {
            text = (TextView) findViewById(R.id.text);
            turnOnOffBlue = (Button) findViewById(R.id.turnOnBluetooth);
            turnOnOffBlue.setOnClickListener(this);
            visibleBtn = (Button) findViewById(R.id.visible);
            visibleBtn.setOnClickListener(this);
            listBtn = (Button) findViewById(R.id.paired);
            listBtn.setOnClickListener(this);
            searchBtn = (Button) findViewById(R.id.search);
            searchBtn.setOnClickListener(this);
            myListView = (ListView) findViewById(R.id.listView1);

            // create the arrayAdapter that contains the BTDevices, and set it
            // to the ListView
            BTArrayAdapter = new ArrayAdapter<String>(this,
                    android.R.layout.simple_list_item_1);
            myListView.setAdapter(BTArrayAdapter);

            if (!myBluetoothAdapter.isEnabled()) {
                turnOnOffBlue.setText("Turn OFF");
                text.setText("Status: Disabled");
            } else {
                turnOnOffBlue.setText("Turn ON");
                text.setText("Status: Enabled");
            }
        }
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.turnOnBluetooth:
                bluetoothOnOff();
                break;
            case R.id.visible:
                visible();
                break;
            case R.id.paired:
                list();
                break;
            case R.id.search:
                find();
                break;
            default:
                break;
        }
    }

    /* to enable and disable bluetooth */
    public void bluetoothOnOff() {
        BluetoothAdapter myBluetoothAdapter = BluetoothAdapter.getDefaultAdapter();
        if (!myBluetoothAdapter.isEnabled()) {
            Intent turnOnIntent = new Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE);
            startActivityForResult(turnOnIntent, REQUEST_ENABLE_BLUETOOTH);
        } else {
            myBluetoothAdapter.disable();
            turnOnOffBlue.setText("Turn OFF");
            BTArrayAdapter.clear();
            Toast.makeText(getApplicationContext(), "Bluetooth turned off",
                    Toast.LENGTH_SHORT).show();
        }
    }

    /* to make visible your device to other devices */
    public void visible() {
        Intent getVisible = new Intent(BluetoothAdapter.ACTION_REQUEST_DISCOVERABLE);
        startActivityForResult(getVisible, 0);
    }

    /* to search pair devices */
    public void list() {
        BluetoothAdapter myBluetoothAdapter = BluetoothAdapter.getDefaultAdapter();
        if (!myBluetoothAdapter.isEnabled()) {
            Toast.makeText(getApplicationContext(), "First Trun On Bluetooth",
                    Toast.LENGTH_SHORT).show();
        } else {
            // get paired devices
            pairedDevices = myBluetoothAdapter.getBondedDevices();
            // put it's one to the adapter
            BTArrayAdapter.clear();
            for (BluetoothDevice device : pairedDevices)
                BTArrayAdapter.add(device.getName() + "\n"
                        + device.getAddress());
            Toast.makeText(getApplicationContext(), "Show Paired Devices",
                    Toast.LENGTH_SHORT).show();
        }
    }

    /* to find all available devices */
    public void find() {
        BluetoothAdapter myBluetoothAdapter = BluetoothAdapter.getDefaultAdapter();
        if (!myBluetoothAdapter.isEnabled()) {
            Toast.makeText(getApplicationContext(), "First Trun On Bluetooth",
                    Toast.LENGTH_SHORT).show();
        } else {
            BTArrayAdapter.clear();
            myBluetoothAdapter.startDiscovery();
            registerReceiver(bReceiver, new IntentFilter(
                    BluetoothDevice.ACTION_FOUND));
        }
    }

    final BroadcastReceiver bReceiver = new BroadcastReceiver() {
        public void onReceive(Context context, Intent intent) {
            String action = intent.getAction();
            // When discovery finds a device
            if (BluetoothDevice.ACTION_FOUND.equals(action)) {
                // Get the BluetoothDevice object from the Intent
                BluetoothDevice device = intent
                        .getParcelableExtra(BluetoothDevice.EXTRA_DEVICE);
                // add the name and the MAC address of the object to the
                // arrayAdapter
                BTArrayAdapter.add(device.getName() + "\n"
                        + device.getAddress());
                BTArrayAdapter.notifyDataSetChanged();
            }
        }
    };

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (requestCode == REQUEST_ENABLE_BLUETOOTH) {
            if (myBluetoothAdapter.isEnabled()) {
                text.setText("Status: Enabled");
                turnOnOffBlue.setText("Turn ON");
                Toast.makeText(getApplicationContext(), "Bluetooth turned on",
                        Toast.LENGTH_SHORT).show();
                find();
            } else {
                text.setText("Status: Disabled");
                turnOnOffBlue.setText("Turn OFF");
            }
        }
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        unregisterReceiver(bReceiver);
    }


}
